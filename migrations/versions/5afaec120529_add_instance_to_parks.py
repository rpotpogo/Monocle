"""add instance to parks

Revision ID: 5afaec120529
Revises: 7428f83d1fba
Create Date: 2018-01-28 23:14:03.256165

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
import sys
from pathlib import Path
monocle_dir = str(Path(__file__).resolve().parents[2])
if monocle_dir not in sys.path:
    sys.path.append(monocle_dir)
from monocle import db as db

# revision identifiers, used by Alembic.
revision = '5afaec120529'
down_revision = '7428f83d1fba'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with db.session_scope() as session:
        rs = session.query(db.Fort) \
              .all()

        for g in rs:
            session.query(db.Fort)\
               .filter(db.Fort.id == g.id)\
               .with_for_update() \
               .update({'park' : sa.null(), 'parkid' : sa.null()})
        session.commit()

    op.drop_constraint('forts_fk_parkid', 'forts', type_='foreignkey')
    op.drop_index('ix_forts_parkid', table_name='forts')
    op.drop_index('ix_park', table_name='parks')
    op.alter_column('forts', 'parkid', existing_type=db.HUGE_TYPE, type_=sa.Integer(), existing_nullable=True)
    op.drop_table('parks')

    op.create_table('parks',
    sa.Column('id', db.HUGE_TYPE, autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=254), nullable=True),
    sa.Column('coords', db.LONG_TEXT, nullable=True),
    sa.Column('updated', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('internalid', sa.Integer(), nullable=False),
    sa.Column('instanceid', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('internalid'),
    )
    op.create_index(op.f('ix_forts_parkid'), 'forts', ['parkid'])
    op.create_index(op.f('ix_parks_internalid'), 'parks', ['internalid'])
    op.create_foreign_key('forts_fk_parkid', 'forts', 'parks', ['parkid'], ['internalid'])
    op.create_index(op.f('ix_parks_instance'), 'parks', ['instanceid'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with db.session_scope() as session:
        rs = session.query(db.Fort) \
              .all()

        for g in rs:
            session.query(db.Fort)\
               .filter(db.Fort.id == g.id)\
               .with_for_update() \
               .update({'park' : sa.null(), 'parkid' : sa.null()})
        session.commit()

    op.drop_constraint('forts_fk_parkid', 'forts', type_='foreignkey')
    op.drop_index(op.f('ix_parks_instance'), table_name='parks')
    op.drop_index(op.f('ix_forts_parkid'), table_name='forts')
    op.drop_index(op.f('ix_parks_internalid'), table_name='parks')
    op.alter_column('forts', 'parkid', existing_type=sa.Integer(), type_=db.HUGE_TYPE, existing_nullable=True)
    op.drop_table('parks')
    op.create_table('parks',
        sa.Column('id', db.HUGE_TYPE, nullable=True, unique=True),
        sa.Column('name', sa.String(length=200), nullable=True),
        sa.Column('coords', db.LONG_TEXT, nullable=True),
        sa.Column('updated', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index('ix_park', 'parks', ['id'])
    op.create_index('ix_forts_parkid', 'forts', ['parkid'])
    op.create_foreign_key('forts_fk_parkid', 'forts', 'parks', ['parkid'], ['id'])

    # ### end Alembic commands ###
